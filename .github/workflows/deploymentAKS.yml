name: AKS Deployment


on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
env:

      app_name: orgapp1
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
jobs:
  build:
    runs-on: ubuntu-latest
    
    
    steps:
      - uses: actions/checkout@v2
      
      
    
      - name: Setup Go environment
        uses: actions/setup-go@v3.5.0
        with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges.
         go-version: 1.18.2
    # Path to the go.mod or go.work file.
      
      
     
        
      - name: docker build
        run: docker build -t '${{env.app_name}}' -f dockerfile .
        
      - name: docker login
        run: docker login --username '${{secrets.DOCKER_LOGIN}}' --password '${{secrets.DOCKER_PASSWORD}}'
        
      - name: tag docker image
        run: docker tag '${{env.app_name}}' '${{secrets.DOCKER_LOGIN}}'/'${{env.app_name}}:v1.0
        
        
      - name: push docker image
        run: docker push '${{secrets.DOCKER_LOGIN}}'/'${{env.app_name}}':v1.0
        
        
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v3
        with:
           # Resource Group Name
           resource-group: resource-group-name
           # AKS Cluster Name
           cluster-name: cluster- name
           # AKS Cluster Subscription
           subscription: # optional
           # Get cluster admin credentials. Values: true or false
           admin: # optional
           # Enables kubelogin for non-admin user scenario. Values: true or false
           use-kubelogin: # optional
           
           
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v4.0
        with:
         # Type of Kubernetes secret. Defaults to 'kubernetes.io/dockerconfigjson'.
          secret-type: docker registry
         # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: docker-image-pull-secret
         # Container Registry URL
          container-registry-url: https //index.docker.io/v1/
         # Container Registry user name
          container-registry-username: '${{secrets.DOCKER_LOOGIN}}'
         # Container Registry password
          container-registry-password: '${{secrets.DOCKER_PASSWORD}}'
          
          
          
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v4
        with:
          manifests: k8s/deployment.yml
                     sk8/service.yml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          images: '${{secrets.docker_login}}/employee-api:v1.0'
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: docker-image-pull-secret
          
          action: deploy
